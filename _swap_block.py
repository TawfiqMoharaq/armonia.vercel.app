# -*- coding: utf-8 -*-
from pathlib import Path
path = Path('src/pages/Diagnosis.tsx')
text = path.read_text(encoding='utf-8')
old = "          <div className=\"bg-white border rounded-2xl shadow px-6 py-6 space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <h2 className=\"text-lg font-semibold text-[#0A6D8B]\">{RESULTS_TITLE}</h2>\n              {loading && <span className=\"text-xs text-[#0A6D8B]\">{LOADING_LABEL}</span>}\n            </div>\n\n            {error && (\n              <div className=\"rounded-lg border border-[#F87171] bg-[#FEE2E2] px-4 py-3 text-sm text-[#B91C1C]\">\n                {error}\n              </div>\n            )}\n\n            {!error && !loading && rankedResults.length === 0 && (\n              <div className=\"rounded-lg border border-dashed border-gray-300 px-4 py-5 text-sm text-gray-500 text-center\">\n                {EMPTY_HINT}\n              </div>\n            )}\n\n            <ul className=\"space-y-3 text-sm text-gray-700\">\n              {resultWithMeta.map(({ data }, index) => (\n                <li\n                  key={data.muscle_en}\n                  className=\"flex items-center justify-between rounded-lg border border-gray-200 px-4 py-3\"\n                >\n                  <div>\n                    <p className=\"font-semibold text-[#0A6D8B]\">{data.muscle_ar}</p>\n                    <p className=\"text-xs text-gray-500\">{data.muscle_en}</p>\n                    <p className=\"text-xs text-gray-400 mt-1\">{\"«·„‰ÿﬁ…: \"} {data.region}</p>\n                  </div>\n                  <span className=\"text-[#18A4B8] font-semibold\">{Math.round(data.prob * 100)}%</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n"
new = "          <div className=\"bg-white border rounded-2xl shadow px-6 py-6 space-y-5\">\n            <div>\n              <h2 className=\"text-lg font-semibold text-[#0A6D8B] mb-3\">„” ÊÏ ‘œ… «· „—Ì‰ «·„—€Ê»</h2>\n              <div className=\"flex flex-wrap gap-3\">\n                {INTENSITY_LEVELS.map((level) => (\n                  <label\n                    key={level.value}\n                    className={cursor-pointer rounded-full border px-4 py-2 text-sm transition }\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"intensity-level\"\n                      value={level.value}\n                      checked={intensityLevel === level.value}\n                      onChange={() => setIntensityLevel(level.value)}\n                      className=\"hidden\"\n                    />\n                    {level.label}\n                  </label>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"border-t border-gray-100 pt-4 space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-lg font-semibold text-[#0A6D8B]\">{RESULTS_TITLE}</h2>\n                {loading && <span className=\"text-xs text-[#0A6D8B]\">{LOADING_LABEL}</span>}\n              </div>\n\n              {error && (\n                <div className=\"rounded-lg border border-[#F87171] bg-[#FEE2E2] px-4 py-3 text-sm text-[#B91C1C]\">\n                  {error}\n                </div>\n              )}\n\n              {!error && !loading && rankedResults.length === 0 && (\n                <div className=\"rounded-lg border border-dashed border-gray-300 px-4 py-5 text-sm text-gray-500 text-center\">\n                  {EMPTY_HINT}\n                </div>\n              )}\n\n              <ul className=\"space-y-3 text-sm text-gray-700\">\n                {resultWithMeta.map(({ data }) => (\n                  <li\n                    key={data.muscle_en}\n                    className=\"flex items-center justify-between rounded-lg border border-gray-200 px-4 py-3\"\n                  >\n                    <div>\n                      <p className=\"font-semibold text-[#0A6D8B]\">{data.muscle_ar}</p>\n                      <p className=\"text-xs text-gray-500\">{data.muscle_en}</p>\n                      <p className=\"text-xs text-gray-400 mt-1\">{\"«·„‰ÿﬁ…: \"} {data.region}</p>\n                    </div>\n                    <span className=\"text-[#18A4B8] font-semibold\">{Math.round(data.prob * 100)}%</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n"
if old not in text:
    raise SystemExit('target block not found')
path.write_text(text.replace(old, new, 1), encoding='utf-8')
